worker_processes 4;

events { worker_connections 1024; }

http {
    sendfile on;

    upstream cache {
        server chapter3_cache_1:6379;
    }

    upstream news_service {
            server chapter3_news_nameko_csl_1:5001;
    }

    server {
        listen 80;

        location / {
            proxy_pass         http://news_service/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        location = /redis_query {
            internal;
            set_unescape_uri $user_id $arg_query;
            redis2_query get $user_id;
            redis2_pass  $arg_backend;
        }

        location ~ ^/cache/(.+)$ {
            default_type application/json;
            set_unescape_uri $id $1;
            set $line_broker '[^\r\n]+';
            content_by_lua "
                local lines = {}
                local res = ngx.location.capture(
                    '/redis_query',
                    {
                        args = {
                            query = ngx.var.id,
                            backend = 'cache'
                        }
                    }
                )
                for line in res.body:gmatch(ngx.var.line_broker) do
                    table.insert(lines, line)
                end
                if lines[2] == nil or lines[2] == '' then
                    ngx.exit(ngx.HTTP_NOT_FOUND)
                end
                ngx.say(lines[2])
            ";
            error_page   401 404 405 = /fallback/$id;
            error_page   502 = /fallback/$id;
        }

        location ~ ^/fallback/(.+)$ {
            set_unescape_uri $id $1;
            proxy_pass         http://news_service/news/$id;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}
