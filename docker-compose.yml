version: '3'

services:

  # ----------------------------------------
  # ----------------------------------------
  # Newspaper monolithic application
  # ----------------------------------------
  # ----------------------------------------

  newspaper_database:
    build: ./database
    ports:
      - 5432:5432  # expose ports - HOST:CONTAINER
    volumes:
      - 'postgres-data:/var/lib/postgresql/data/'
    healthcheck:
      test: exit 0
    restart: always

  my_newspaper:
    image: my_newspaper
    build: ./monolithic_application
    volumes:
      - './monolithic_application:/app'
    environment:
      - DB_NAME=newspaper_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=newspaper_database
      - DB_PORT=5432
      - EMAIL_HOST=smtp.mail.com
      - EMAIL_FROM=test_mail@mail.com
      - EMAIL_PASSWORD=your_password
    depends_on:
      - newspaper_database
    links:
      - newspaper_database
    ports:
      - 8080:8080
    restart: always

  # ----------------------------------------
  # ----------------------------------------
  # Newsletter service application
  # ----------------------------------------
  # ----------------------------------------

  newsletter_service:
    image: newsletter_service
    build: ./newsletter_service
    volumes:
      - './newsletter_service:/app'
    environment:
      - DB_NAME=newspaper_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=newspaper_database
      - DB_PORT=5432
      - EMAIL_HOST=smtp.mail.com
      - EMAIL_FROM=test_mail@mail.com
      - EMAIL_PASSWORD=your_password
    depends_on:
      - newspaper_database
    links:
      - newspaper_database
    ports:
      - 8081:8081
    restart: always

  # ----------------------------------------
  # ----------------------------------------
  # NGINX configuration
  # ----------------------------------------
  # ----------------------------------------

  web_server:
    build: ./nginx
    ports:
      - "80:80"
    links:
      - my_newspaper
      - newsletter_service
    restart: always


volumes:
  postgres-data:
