# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
import os

import sys  # noqa
sys.path.insert(0, os.path.dirname(__file__))

import order_pb2 as order__pb2


class OrderStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_order_by_id = channel.unary_unary(
        '/Order/get_order_by_id',
        request_serializer=order__pb2.OrderRequest.SerializeToString,
        response_deserializer=order__pb2.OrderResponse.FromString,
        )


class OrderServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_order_by_id(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OrderServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_order_by_id': grpc.unary_unary_rpc_method_handler(
          servicer.get_order_by_id,
          request_deserializer=order__pb2.OrderRequest.FromString,
          response_serializer=order__pb2.OrderResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Order', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
